{
    "openapi": "3.0.0",
    "info": {
        "title": "Shlink",
        "description": "Shlink, the self-hosted URL shortener",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "{scheme}:\/\/{host}",
            "variables": {
                "scheme": {
                    "enum": [
                        "https",
                        "http"
                    ],
                    "default": "https"
                },
                "host": {
                    "default": ""
                }
            }
        }
    ],
    "paths": {
        "\/rest\/v{version}\/short-urls": {
            "get": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "List short URLs",
                "description": "Returns the list of short URLs.",
                "operationId": "listShortUrls",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to be displayed. Defaults to 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The amount of items to return on every page. Defaults to 10",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "A query used to filter results by searching for it on the longUrl and shortCode fields. (Since v1.3.0)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "description": "A list of tags used to filter the result set. Only short URLs tagged with at least one of the provided tags will be returned. (Since v1.3.0)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The field from which you want to order the result. (Since v1.3.0)",
                        "required": false,
                        "schema": {
                            "enum": [
                                "longUrl-ASC",
                                "longUrl-DESC",
                                "shortCode-ASC",
                                "shortCode-DESC",
                                "dateCreated-ASC",
                                "dateCreated-DESC",
                                "visits-ASC",
                                "visits-DESC",
                                "title-ASC",
                                "title-DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) from which we want to get short URLs.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) until which we want to get short URLs.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of short URLs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortUrls": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "shortCode": {
                                                                "type": "string",
                                                                "description": "The short code for this short URL."
                                                            },
                                                            "shortUrl": {
                                                                "type": "string",
                                                                "description": "The short URL."
                                                            },
                                                            "longUrl": {
                                                                "type": "string",
                                                                "description": "The original long URL."
                                                            },
                                                            "dateCreated": {
                                                                "type": "string",
                                                                "description": "The date in which the short URL was created in ISO format.",
                                                                "format": "date-time"
                                                            },
                                                            "visitsCount": {
                                                                "type": "integer",
                                                                "description": "The number of visits that this short URL has recieved."
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "description": "A list of tags applied to this short URL"
                                                            },
                                                            "meta": {
                                                                "required": [
                                                                    "validSince",
                                                                    "validUntil",
                                                                    "maxVisits"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "validSince": {
                                                                        "type": "string",
                                                                        "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                                                        "nullable": true
                                                                    },
                                                                    "validUntil": {
                                                                        "type": "string",
                                                                        "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                                                        "nullable": true
                                                                    },
                                                                    "maxVisits": {
                                                                        "type": "number",
                                                                        "description": "The maximum number of allowed visits for this short code",
                                                                        "nullable": true
                                                                    }
                                                                }
                                                            },
                                                            "domain": {
                                                                "type": "string",
                                                                "description": "The domain in which the short URL was created. Null if it belongs to default domain.",
                                                                "nullable": true
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "description": "A descriptive title of the short URL.",
                                                                "nullable": true
                                                            },
                                                            "crawlable": {
                                                                "type": "boolean",
                                                                "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                                            }
                                                        }
                                                    }
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "description": "The number of current page."
                                                        },
                                                        "pagesCount": {
                                                            "type": "integer",
                                                            "description": "The total number of pages that can be obtained."
                                                        },
                                                        "itemsPerPage": {
                                                            "type": "integer",
                                                            "description": "The number of items for every page."
                                                        },
                                                        "itemsInCurrentPage": {
                                                            "type": "integer",
                                                            "description": "The number of items in current page (could be smaller than itemsPerPage)."
                                                        },
                                                        "totalItems": {
                                                            "type": "integer",
                                                            "description": "The total number of items among all pages."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "shortUrls": {
                                    "data": [
                                        {
                                            "shortCode": "12C18",
                                            "shortUrl": "https:\/\/doma.in\/12C18",
                                            "longUrl": "https:\/\/store.steampowered.com",
                                            "dateCreated": "2016-08-21T20:34:16+02:00",
                                            "visitsCount": 328,
                                            "tags": [
                                                "games",
                                                "tech"
                                            ],
                                            "meta": {
                                                "validSince": "2017-01-21T00:00:00+02:00",
                                                "validUntil": null,
                                                "maxVisits": 100
                                            },
                                            "domain": null,
                                            "title": "Welcome to Steam",
                                            "crawlable": false
                                        },
                                        {
                                            "shortCode": "12Kb3",
                                            "shortUrl": "https:\/\/doma.in\/12Kb3",
                                            "longUrl": "https:\/\/shlink.io",
                                            "dateCreated": "2016-05-01T20:34:16+02:00",
                                            "visitsCount": 1029,
                                            "tags": [
                                                "shlink"
                                            ],
                                            "meta": {
                                                "validSince": null,
                                                "validUntil": null,
                                                "maxVisits": null
                                            },
                                            "domain": null,
                                            "title": null,
                                            "crawlable": false
                                        },
                                        {
                                            "shortCode": "123bA",
                                            "shortUrl": "https:\/\/example.com\/123bA",
                                            "longUrl": "https:\/\/www.google.com",
                                            "dateCreated": "2015-10-01T20:34:16+02:00",
                                            "visitsCount": 25,
                                            "tags": [],
                                            "meta": {
                                                "validSince": "2017-01-21T00:00:00+02:00",
                                                "validUntil": null,
                                                "maxVisits": null
                                            },
                                            "domain": "example.com",
                                            "title": null,
                                            "crawlable": false
                                        }
                                    ],
                                    "pagination": {
                                        "currentPage": 5,
                                        "pagesCount": 12,
                                        "itemsPerPage": 10,
                                        "itemsInCurrentPage": 10,
                                        "totalItems": 115
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Create short URL",
                "description": "Creates a new short URL.<br><\/br>**Param findIfExists**: This new param allows to force shlink to return existing short URLs when found based on provided params, instead of creating a new one. However, it might add complexity and have unexpected outputs.\n\nThese are the use cases:\n* Only the long URL is provided: It will return the newest match or create a new short URL if none is found.\n* Long url and custom slug are provided: It will return the short URL when both params match, return an error when the slug is in use for another long URL, or create a new short URL otherwise.\n* Any of the above but including other params (tags, validSince, validUntil, maxVisits): It will behave the same as the previous two cases, but it will try to exactly match existing results using all the params. If any of them does not match, it will try to create a new short URL.",
                "operationId": "createShortUrl",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "longUrl"
                                ],
                                "type": "object",
                                "properties": {
                                    "longUrl": {
                                        "type": "string",
                                        "description": "The URL to parse"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The URL to parse"
                                    },
                                    "validSince": {
                                        "type": "string",
                                        "description": "The date (in ISO-8601 format) from which this short code will be valid"
                                    },
                                    "validUntil": {
                                        "type": "string",
                                        "description": "The date (in ISO-8601 format) until which this short code will be valid"
                                    },
                                    "customSlug": {
                                        "type": "string",
                                        "description": "A unique custom slug to be used instead of the generated short code"
                                    },
                                    "maxVisits": {
                                        "type": "number",
                                        "description": "The maximum number of allowed visits for this short code"
                                    },
                                    "findIfExists": {
                                        "type": "boolean",
                                        "description": "Will force existing matching URL to be returned if found, instead of creating a new one"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "description": "The domain to which the short URL will be attached"
                                    },
                                    "shortCodeLength": {
                                        "type": "number",
                                        "description": "The length for generated short code. It has to be at least 4 and defaults to 5. It will be ignored when customSlug is provided"
                                    },
                                    "validateUrl": {
                                        "type": "boolean",
                                        "description": "Tells if the long URL should or should not be validated as a reachable URL. If not provided, it will fall back to app-level config"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "A descriptive title of the short URL."
                                    },
                                    "crawlable": {
                                        "type": "boolean",
                                        "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The result of parsing the long URL",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortCode": {
                                            "type": "string",
                                            "description": "The short code for this short URL."
                                        },
                                        "shortUrl": {
                                            "type": "string",
                                            "description": "The short URL."
                                        },
                                        "longUrl": {
                                            "type": "string",
                                            "description": "The original long URL."
                                        },
                                        "dateCreated": {
                                            "type": "string",
                                            "description": "The date in which the short URL was created in ISO format.",
                                            "format": "date-time"
                                        },
                                        "visitsCount": {
                                            "type": "integer",
                                            "description": "The number of visits that this short URL has recieved."
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of tags applied to this short URL"
                                        },
                                        "meta": {
                                            "required": [
                                                "validSince",
                                                "validUntil",
                                                "maxVisits"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "validSince": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "validUntil": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "maxVisits": {
                                                    "type": "number",
                                                    "description": "The maximum number of allowed visits for this short code",
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "domain": {
                                            "type": "string",
                                            "description": "The domain in which the short URL was created. Null if it belongs to default domain.",
                                            "nullable": true
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A descriptive title of the short URL.",
                                            "nullable": true
                                        },
                                        "crawlable": {
                                            "type": "boolean",
                                            "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "shortCode": "12C18",
                                "shortUrl": "https:\/\/doma.in\/12C18",
                                "longUrl": "https:\/\/store.steampowered.com",
                                "dateCreated": "2016-08-21T20:34:16+02:00",
                                "visitsCount": 0,
                                "tags": [
                                    "games",
                                    "tech"
                                ],
                                "meta": {
                                    "validSince": "2017-01-21T00:00:00+02:00",
                                    "validUntil": null,
                                    "maxVisits": 500
                                },
                                "domain": null,
                                "title": null,
                                "crawlable": false
                            }
                        }
                    },
                    "400": {
                        "description": "Some of provided data is invalid. Check extra fields to know exactly what.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "required": [
                                                "type",
                                                "title",
                                                "detail",
                                                "status"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "A machine unique code"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "A unique title"
                                                },
                                                "detail": {
                                                    "type": "string",
                                                    "description": "A human-friendly error description"
                                                },
                                                "status": {
                                                    "type": "number",
                                                    "description": "HTTP response status code"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "invalidElements": {
                                                    "type": "array",
                                                    "items": {
                                                        "enum": [
                                                            "validSince",
                                                            "validUntil",
                                                            "customSlug",
                                                            "maxVisits",
                                                            "findIfExists",
                                                            "domain"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "A URL that could not be verified, if the error type is INVALID_URL"
                                                },
                                                "customSlug": {
                                                    "type": "string",
                                                    "description": "Provided custom slug when the error type is INVALID_SLUG"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/short-urls\/shorten": {
            "get": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Create a short URL",
                "description": "Creates a short URL in a single API call. Useful for third party integrations.",
                "operationId": "shortenUrl",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "apiKey",
                        "in": "query",
                        "description": "The API key used to authenticate the request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "longUrl",
                        "in": "query",
                        "description": "The URL to be shortened",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format in which you want the response to be returned. You can also use the \"Accept\" header instead of this",
                        "required": false,
                        "schema": {
                            "enum": [
                                "txt",
                                "json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of short URLs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortCode": {
                                            "type": "string",
                                            "description": "The short code for this short URL."
                                        },
                                        "shortUrl": {
                                            "type": "string",
                                            "description": "The short URL."
                                        },
                                        "longUrl": {
                                            "type": "string",
                                            "description": "The original long URL."
                                        },
                                        "dateCreated": {
                                            "type": "string",
                                            "description": "The date in which the short URL was created in ISO format.",
                                            "format": "date-time"
                                        },
                                        "visitsCount": {
                                            "type": "integer",
                                            "description": "The number of visits that this short URL has recieved."
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of tags applied to this short URL"
                                        },
                                        "meta": {
                                            "required": [
                                                "validSince",
                                                "validUntil",
                                                "maxVisits"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "validSince": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "validUntil": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "maxVisits": {
                                                    "type": "number",
                                                    "description": "The maximum number of allowed visits for this short code",
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "domain": {
                                            "type": "string",
                                            "description": "The domain in which the short URL was created. Null if it belongs to default domain.",
                                            "nullable": true
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A descriptive title of the short URL.",
                                            "nullable": true
                                        },
                                        "crawlable": {
                                            "type": "boolean",
                                            "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                        }
                                    }
                                }
                            },
                            "text\/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "longUrl": "https:\/\/github.com\/shlinkio\/shlink",
                                "shortUrl": "https:\/\/doma.in\/abc123",
                                "shortCode": "abc123",
                                "dateCreated": "2016-08-21T20:34:16+02:00",
                                "visitsCount": 0,
                                "tags": [
                                    "games",
                                    "tech"
                                ],
                                "meta": {
                                    "validSince": "2017-01-21T00:00:00+02:00",
                                    "validUntil": null,
                                    "maxVisits": 100
                                },
                                "domain": null,
                                "title": null,
                                "crawlable": false
                            },
                            "text\/plain": "https:\/\/doma.in\/abc123"
                        }
                    },
                    "400": {
                        "description": "The long URL was not provided or is invalid.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            },
                            "text\/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application\/problem+json": {
                                "title": "Invalid URL",
                                "type": "INVALID_URL",
                                "detail": "Provided URL foo is invalid. Try with a different one.",
                                "status": 400,
                                "url": "https:\/\/invalid-url.com"
                            },
                            "text\/plain": "INVALID_URL"
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            },
                            "text\/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application\/problem+json": {
                                "error": "INTERNAL_SERVER_ERROR",
                                "message": "Unexpected error occurred"
                            },
                            "text\/plain": "INTERNAL_SERVER_ERROR"
                        }
                    }
                }
            }
        },
        "\/rest\/v{version}\/short-urls\/{shortCode}": {
            "get": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Parse short code",
                "description": "Get the long URL behind a short URL's short code.",
                "operationId": "getShortUrl",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to resolve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain in which the short code should be searched for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The URL info behind a short code.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortCode": {
                                            "type": "string",
                                            "description": "The short code for this short URL."
                                        },
                                        "shortUrl": {
                                            "type": "string",
                                            "description": "The short URL."
                                        },
                                        "longUrl": {
                                            "type": "string",
                                            "description": "The original long URL."
                                        },
                                        "dateCreated": {
                                            "type": "string",
                                            "description": "The date in which the short URL was created in ISO format.",
                                            "format": "date-time"
                                        },
                                        "visitsCount": {
                                            "type": "integer",
                                            "description": "The number of visits that this short URL has recieved."
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of tags applied to this short URL"
                                        },
                                        "meta": {
                                            "required": [
                                                "validSince",
                                                "validUntil",
                                                "maxVisits"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "validSince": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "validUntil": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "maxVisits": {
                                                    "type": "number",
                                                    "description": "The maximum number of allowed visits for this short code",
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "domain": {
                                            "type": "string",
                                            "description": "The domain in which the short URL was created. Null if it belongs to default domain.",
                                            "nullable": true
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A descriptive title of the short URL.",
                                            "nullable": true
                                        },
                                        "crawlable": {
                                            "type": "boolean",
                                            "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "shortCode": "12Kb3",
                                "shortUrl": "https:\/\/doma.in\/12Kb3",
                                "longUrl": "https:\/\/shlink.io",
                                "dateCreated": "2016-05-01T20:34:16+02:00",
                                "visitsCount": 1029,
                                "tags": [
                                    "shlink"
                                ],
                                "meta": {
                                    "validSince": "2017-01-21T00:00:00+02:00",
                                    "validUntil": null,
                                    "maxVisits": 100
                                },
                                "domain": null,
                                "title": null,
                                "crawlable": false
                            }
                        }
                    },
                    "404": {
                        "description": "No URL was found for provided short code.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Delete short URL",
                "description": "Deletes the short URL for provided short code.",
                "operationId": "deleteShortUrl",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to edit.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain in which the short code should be searched for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The short URL has been properly deleted."
                    },
                    "422": {
                        "description": "The visits threshold in shlink does not allow this short URL to be deleted.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/problem+json": {
                                "title": "Cannot delete short URL",
                                "type": "INVALID_SHORTCODE_DELETION",
                                "detail": "It is not possible to delete URL with short code \"abc123\" because it has reached more than \"15\" visits.",
                                "status": 422
                            }
                        }
                    },
                    "404": {
                        "description": "No short URL was found for provided short code.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Edit short URL",
                "description": "Update certain meta arguments from an existing short URL.",
                "operationId": "editShortUrl",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to edit.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain in which the short code should be searched for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "longUrl": {
                                        "type": "string",
                                        "description": "The long URL this short URL will redirect to"
                                    },
                                    "validSince": {
                                        "type": "string",
                                        "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                        "nullable": true
                                    },
                                    "validUntil": {
                                        "type": "string",
                                        "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                        "nullable": true
                                    },
                                    "maxVisits": {
                                        "type": "number",
                                        "description": "The maximum number of allowed visits for this short code",
                                        "nullable": true
                                    },
                                    "validateUrl": {
                                        "type": "boolean",
                                        "description": "Tells if the long URL (if provided) should or should not be validated as a reachable URL. If not provided, it will fall back to app-level config"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of tags to set to the short URL."
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "A descriptive title of the short URL.",
                                        "nullable": true
                                    },
                                    "crawlable": {
                                        "type": "boolean",
                                        "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The short URL has been properly updated.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortCode": {
                                            "type": "string",
                                            "description": "The short code for this short URL."
                                        },
                                        "shortUrl": {
                                            "type": "string",
                                            "description": "The short URL."
                                        },
                                        "longUrl": {
                                            "type": "string",
                                            "description": "The original long URL."
                                        },
                                        "dateCreated": {
                                            "type": "string",
                                            "description": "The date in which the short URL was created in ISO format.",
                                            "format": "date-time"
                                        },
                                        "visitsCount": {
                                            "type": "integer",
                                            "description": "The number of visits that this short URL has recieved."
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of tags applied to this short URL"
                                        },
                                        "meta": {
                                            "required": [
                                                "validSince",
                                                "validUntil",
                                                "maxVisits"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "validSince": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) from which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "validUntil": {
                                                    "type": "string",
                                                    "description": "The date (in ISO-8601 format) until which this short code will be valid",
                                                    "nullable": true
                                                },
                                                "maxVisits": {
                                                    "type": "number",
                                                    "description": "The maximum number of allowed visits for this short code",
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "domain": {
                                            "type": "string",
                                            "description": "The domain in which the short URL was created. Null if it belongs to default domain.",
                                            "nullable": true
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A descriptive title of the short URL.",
                                            "nullable": true
                                        },
                                        "crawlable": {
                                            "type": "boolean",
                                            "description": "Tells if this URL will be included as 'Allow' in Shlink's robots.txt."
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "shortCode": "12Kb3",
                                "shortUrl": "https:\/\/doma.in\/12Kb3",
                                "longUrl": "https:\/\/shlink.io",
                                "dateCreated": "2016-05-01T20:34:16+02:00",
                                "visitsCount": 1029,
                                "tags": [
                                    "shlink"
                                ],
                                "meta": {
                                    "validSince": "2017-01-21T00:00:00+02:00",
                                    "validUntil": null,
                                    "maxVisits": 100
                                },
                                "domain": null,
                                "title": "Shlink - The URL shortener",
                                "crawlable": false
                            }
                        }
                    },
                    "400": {
                        "description": "Provided meta arguments are invalid.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "required": [
                                                "type",
                                                "title",
                                                "detail",
                                                "status"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "A machine unique code"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "A unique title"
                                                },
                                                "detail": {
                                                    "type": "string",
                                                    "description": "A human-friendly error description"
                                                },
                                                "status": {
                                                    "type": "number",
                                                    "description": "HTTP response status code"
                                                }
                                            }
                                        },
                                        {
                                            "required": [
                                                "invalidElements"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "invalidElements": {
                                                    "type": "array",
                                                    "items": {
                                                        "enum": [
                                                            "longUrl",
                                                            "validSince",
                                                            "validUntil",
                                                            "maxVisits"
                                                        ],
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No short URL was found for provided short code.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/short-urls\/{shortCode}\/tags": {
            "put": {
                "tags": [
                    "Short URLs"
                ],
                "summary": "Edit tags on short URL",
                "description": "Edit the tags on URL identified by provided short code.<br \/>This endpoint is deprecated. Use the [Edit short URL](#\/Short%20URLs\/editShortUrl) endpoint to edit tags.",
                "operationId": "editShortUrlTags",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code for the short URL in which we want to edit tags.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain in which the short code should be searched for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of tags to set to the short URL."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "List of tags.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "tags": [
                                    "games",
                                    "tech"
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "The request body does not contain a \"tags\" param with array type.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No short URL was found for provided short code.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "List existing tags",
                "description": "Returns the list of all tags used in any short URL, ordered by name",
                "operationId": "listTags",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "withStats",
                        "in": "query",
                        "description": "Whether you want to include also a list with general stats by tag or not.",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true",
                                "false"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tags": {
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "stats": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "tag": {
                                                                "type": "string",
                                                                "description": "The unique tag name"
                                                            },
                                                            "shortUrlsCount": {
                                                                "type": "number",
                                                                "description": "The amount of short URLs using this tag"
                                                            },
                                                            "userAgent": {
                                                                "type": "number",
                                                                "description": "The combined amount of visits received by short URLs with this tag"
                                                            }
                                                        }
                                                    },
                                                    "description": "The tag stats will be returned only if the withStats param was provided with value 'true'"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "tags": {
                                    "data": [
                                        "games",
                                        "php",
                                        "shlink",
                                        "tech"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Rename tag",
                "description": "Renames one existing tag",
                "operationId": "renameTag",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "oldName",
                                    "newName"
                                ],
                                "type": "object",
                                "properties": {
                                    "oldName": {
                                        "type": "string",
                                        "description": "Current name of the tag"
                                    },
                                    "newName": {
                                        "type": "string",
                                        "description": "New name of the tag"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The tag has been properly renamed"
                    },
                    "400": {
                        "description": "You have not provided either the oldName or the newName params.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The API key you used does not have permissions to rename tags.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There's no tag found with the name provided in oldName param.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The name provided in newName param is already in use for another tag.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create tags",
                "description": "Provided a list of tags, creates all that do not yet exist<br \/>This endpoint is deprecated, as tags are automatically created while creating a short URL",
                "operationId": "createTags",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of tag names to create"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The list of tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tags": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "tags": {
                                    "data": [
                                        "games",
                                        "php",
                                        "shlink",
                                        "tech"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Delete tags",
                "description": "Deletes provided list of tags",
                "operationId": "deleteTags",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "description": "The names of the tags to delete",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tags properly deleted"
                    },
                    "403": {
                        "description": "The API key you used does not have permissions to delete tags.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/visits": {
            "get": {
                "tags": [
                    "Visits"
                ],
                "summary": "Get general visits stats",
                "description": "Get general visits stats not linked to one specific short URL.",
                "operationId": "getGlobalVisits",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Visits stats.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "visits": {
                                            "required": [
                                                "visitsCount",
                                                "orphanVisitsCount"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "visitsCount": {
                                                    "type": "number",
                                                    "description": "The total amount of visits received on any short URL."
                                                },
                                                "orphanVisitsCount": {
                                                    "type": "number",
                                                    "description": "The total amount of visits that could not be matched to a short URL (visits to the base URL, an invalid short URL or any other kind of 404)."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "visits": {
                                    "visitsCount": 1569874,
                                    "orphanVisitsCount": 71345
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/short-urls\/{shortCode}\/visits": {
            "get": {
                "tags": [
                    "Visits"
                ],
                "summary": "List visits for short URL",
                "description": "Get the list of visits on the short URL behind provided short code.",
                "operationId": "getShortUrlVisits",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code for the short URL from which we want to get the visits.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "The domain in which the short code should be searched for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) from which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) until which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to display. Defaults to 1",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The amount of items to return on every page. Defaults to all the items",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "excludeBots",
                        "in": "query",
                        "description": "Tells if visits from potential bots should be excluded from the result set",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of visits.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "visits": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "referer",
                                                            "date",
                                                            "userAgent",
                                                            "visitLocation"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "referer": {
                                                                "type": "string",
                                                                "description": "The origin from which the visit was performed"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "The date in which the visit was performed",
                                                                "format": "date-time"
                                                            },
                                                            "userAgent": {
                                                                "type": "string",
                                                                "description": "The user agent from which the visit was performed"
                                                            },
                                                            "visitLocation": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "cityName": {
                                                                        "type": "string"
                                                                    },
                                                                    "countryCode": {
                                                                        "type": "string"
                                                                    },
                                                                    "countryName": {
                                                                        "type": "string"
                                                                    },
                                                                    "latitude": {
                                                                        "type": "number"
                                                                    },
                                                                    "longitude": {
                                                                        "type": "number"
                                                                    },
                                                                    "regionName": {
                                                                        "type": "string"
                                                                    },
                                                                    "timezone": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "potentialBot": {
                                                                "type": "boolean",
                                                                "description": "Tells if Shlink thinks this visit comes potentially from a bot or crawler"
                                                            }
                                                        }
                                                    }
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "description": "The number of current page."
                                                        },
                                                        "pagesCount": {
                                                            "type": "integer",
                                                            "description": "The total number of pages that can be obtained."
                                                        },
                                                        "itemsPerPage": {
                                                            "type": "integer",
                                                            "description": "The number of items for every page."
                                                        },
                                                        "itemsInCurrentPage": {
                                                            "type": "integer",
                                                            "description": "The number of items in current page (could be smaller than itemsPerPage)."
                                                        },
                                                        "totalItems": {
                                                            "type": "integer",
                                                            "description": "The total number of items among all pages."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "visits": {
                                    "data": [
                                        {
                                            "referer": "https:\/\/twitter.com",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko\/20100101 Firefox\/47.0 Mozilla\/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0) Gecko\/20100101 Firefox\/42.0",
                                            "visitLocation": null,
                                            "potentialBot": false
                                        },
                                        {
                                            "referer": "https:\/\/t.co",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/51.0.2704.103 Safari\/537.36",
                                            "visitLocation": {
                                                "cityName": "Cupertino",
                                                "countryCode": "US",
                                                "countryName": "United States",
                                                "latitude": 37.3042,
                                                "longitude": -122.0946,
                                                "regionName": "California",
                                                "timezone": "America\/Los_Angeles"
                                            },
                                            "potentialBot": false
                                        },
                                        {
                                            "referer": null,
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "some_web_crawler\/1.4",
                                            "visitLocation": null,
                                            "potentialBot": true
                                        }
                                    ],
                                    "pagination": {
                                        "currentPage": 5,
                                        "pagesCount": 12,
                                        "itemsPerPage": 10,
                                        "itemsInCurrentPage": 10,
                                        "totalItems": 115
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The short code does not belong to any short URL.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/tags\/{tag}\/visits": {
            "get": {
                "tags": [
                    "Visits"
                ],
                "summary": "List visits for tag",
                "description": "Get the list of visits on any short URL which is tagged with provided tag.",
                "operationId": "getTagVisits",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "The tag from which we want to get the visits.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) from which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) until which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to display. Defaults to 1",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The amount of items to return on every page. Defaults to all the items",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "excludeBots",
                        "in": "query",
                        "description": "Tells if visits from potential bots should be excluded from the result set",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of visits.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "visits": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "referer",
                                                            "date",
                                                            "userAgent",
                                                            "visitLocation"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "referer": {
                                                                "type": "string",
                                                                "description": "The origin from which the visit was performed"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "The date in which the visit was performed",
                                                                "format": "date-time"
                                                            },
                                                            "userAgent": {
                                                                "type": "string",
                                                                "description": "The user agent from which the visit was performed"
                                                            },
                                                            "visitLocation": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "cityName": {
                                                                        "type": "string"
                                                                    },
                                                                    "countryCode": {
                                                                        "type": "string"
                                                                    },
                                                                    "countryName": {
                                                                        "type": "string"
                                                                    },
                                                                    "latitude": {
                                                                        "type": "number"
                                                                    },
                                                                    "longitude": {
                                                                        "type": "number"
                                                                    },
                                                                    "regionName": {
                                                                        "type": "string"
                                                                    },
                                                                    "timezone": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "potentialBot": {
                                                                "type": "boolean",
                                                                "description": "Tells if Shlink thinks this visit comes potentially from a bot or crawler"
                                                            }
                                                        }
                                                    }
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "description": "The number of current page."
                                                        },
                                                        "pagesCount": {
                                                            "type": "integer",
                                                            "description": "The total number of pages that can be obtained."
                                                        },
                                                        "itemsPerPage": {
                                                            "type": "integer",
                                                            "description": "The number of items for every page."
                                                        },
                                                        "itemsInCurrentPage": {
                                                            "type": "integer",
                                                            "description": "The number of items in current page (could be smaller than itemsPerPage)."
                                                        },
                                                        "totalItems": {
                                                            "type": "integer",
                                                            "description": "The total number of items among all pages."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "visits": {
                                    "data": [
                                        {
                                            "referer": "https:\/\/twitter.com",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko\/20100101 Firefox\/47.0 Mozilla\/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0) Gecko\/20100101 Firefox\/42.0",
                                            "visitLocation": null,
                                            "potentialBot": false
                                        },
                                        {
                                            "referer": "https:\/\/t.co",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/51.0.2704.103 Safari\/537.36",
                                            "visitLocation": {
                                                "cityName": "Cupertino",
                                                "countryCode": "US",
                                                "countryName": "United States",
                                                "latitude": 37.3042,
                                                "longitude": -122.0946,
                                                "regionName": "California",
                                                "timezone": "America\/Los_Angeles"
                                            },
                                            "potentialBot": false
                                        },
                                        {
                                            "referer": null,
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "some_web_crawler\/1.4",
                                            "visitLocation": null,
                                            "potentialBot": true
                                        }
                                    ],
                                    "pagination": {
                                        "currentPage": 5,
                                        "pagesCount": 12,
                                        "itemsPerPage": 10,
                                        "itemsInCurrentPage": 10,
                                        "totalItems": 115
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The tag does not exist.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/visits\/orphan": {
            "get": {
                "tags": [
                    "Visits"
                ],
                "summary": "List orphan visits",
                "description": "Get the list of visits to invalid short URLs, the base URL or any other 404.",
                "operationId": "getOrphanVisits",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) from which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The date (in ISO-8601 format) until which we want to get visits.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to display. Defaults to 1",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The amount of items to return on every page. Defaults to all the items",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "excludeBots",
                        "in": "query",
                        "description": "Tells if visits from potential bots should be excluded from the result set",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of visits.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "visits": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "visitedUrl",
                                                            "type"
                                                        ],
                                                        "type": "object",
                                                        "allOf": [
                                                            {
                                                                "required": [
                                                                    "referer",
                                                                    "date",
                                                                    "userAgent",
                                                                    "visitLocation"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "referer": {
                                                                        "type": "string",
                                                                        "description": "The origin from which the visit was performed"
                                                                    },
                                                                    "date": {
                                                                        "type": "string",
                                                                        "description": "The date in which the visit was performed",
                                                                        "format": "date-time"
                                                                    },
                                                                    "userAgent": {
                                                                        "type": "string",
                                                                        "description": "The user agent from which the visit was performed"
                                                                    },
                                                                    "visitLocation": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "cityName": {
                                                                                "type": "string"
                                                                            },
                                                                            "countryCode": {
                                                                                "type": "string"
                                                                            },
                                                                            "countryName": {
                                                                                "type": "string"
                                                                            },
                                                                            "latitude": {
                                                                                "type": "number"
                                                                            },
                                                                            "longitude": {
                                                                                "type": "number"
                                                                            },
                                                                            "regionName": {
                                                                                "type": "string"
                                                                            },
                                                                            "timezone": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "potentialBot": {
                                                                        "type": "boolean",
                                                                        "description": "Tells if Shlink thinks this visit comes potentially from a bot or crawler"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "properties": {
                                                            "visitedUrl": {
                                                                "type": "string",
                                                                "description": "The originally visited URL that triggered the tracking of this visit",
                                                                "nullable": true
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "invalid_short_url",
                                                                    "base_url",
                                                                    "regular_404"
                                                                ],
                                                                "type": "string",
                                                                "description": "Tells the type of orphan visit"
                                                            }
                                                        }
                                                    }
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "currentPage": {
                                                            "type": "integer",
                                                            "description": "The number of current page."
                                                        },
                                                        "pagesCount": {
                                                            "type": "integer",
                                                            "description": "The total number of pages that can be obtained."
                                                        },
                                                        "itemsPerPage": {
                                                            "type": "integer",
                                                            "description": "The number of items for every page."
                                                        },
                                                        "itemsInCurrentPage": {
                                                            "type": "integer",
                                                            "description": "The number of items in current page (could be smaller than itemsPerPage)."
                                                        },
                                                        "totalItems": {
                                                            "type": "integer",
                                                            "description": "The total number of items among all pages."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "visits": {
                                    "data": [
                                        {
                                            "referer": "https:\/\/twitter.com",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko\/20100101 Firefox\/47.0 Mozilla\/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0) Gecko\/20100101 Firefox\/42.0",
                                            "visitLocation": null,
                                            "potentialBot": false,
                                            "visitedUrl": "https:\/\/doma.in",
                                            "type": "base_url"
                                        },
                                        {
                                            "referer": "https:\/\/t.co",
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/51.0.2704.103 Safari\/537.36",
                                            "visitLocation": {
                                                "cityName": "Cupertino",
                                                "countryCode": "US",
                                                "countryName": "United States",
                                                "latitude": 37.3042,
                                                "longitude": -122.0946,
                                                "regionName": "California",
                                                "timezone": "America\/Los_Angeles"
                                            },
                                            "potentialBot": false,
                                            "visitedUrl": "https:\/\/doma.in\/foo",
                                            "type": "invalid_short_url"
                                        },
                                        {
                                            "referer": null,
                                            "date": "2015-08-20T05:05:03+04:00",
                                            "userAgent": "some_web_crawler\/1.4",
                                            "visitLocation": null,
                                            "potentialBot": true,
                                            "visitedUrl": "https:\/\/doma.in\/foo\/bar\/baz",
                                            "type": "regular_404"
                                        }
                                    ],
                                    "pagination": {
                                        "currentPage": 5,
                                        "pagesCount": 12,
                                        "itemsPerPage": 10,
                                        "itemsInCurrentPage": 10,
                                        "totalItems": 115
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/domains": {
            "get": {
                "tags": [
                    "Domains"
                ],
                "summary": "List existing domains",
                "description": "Returns the list of all domains ever used, with a flag that tells if they are the default domain",
                "operationId": "listDomains",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "domains"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "domains": {
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "domain",
                                                            "isDefault"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string"
                                                            },
                                                            "isDefault": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "domains": {
                                    "data": [
                                        {
                                            "domain": "example.com",
                                            "isDefault": true
                                        },
                                        {
                                            "domain": "aaa.com",
                                            "isDefault": false
                                        },
                                        {
                                            "domain": "bbb.com",
                                            "isDefault": false
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/v{version}\/mercure-info": {
            "get": {
                "tags": [
                    "Integrations"
                ],
                "summary": "Get mercure integration info",
                "description": "Returns information to consume updates published by Shlink on a mercure hub. https:\/\/mercure.rocks\/",
                "operationId": "mercureInfo",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The API version to be consumed",
                        "required": true,
                        "schema": {
                            "enum": [
                                "2",
                                "1"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The mercure integration info",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "mercureHubUrl",
                                        "jwt",
                                        "jwtExpiration"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "mercureHubUrl": {
                                            "type": "string",
                                            "description": "The public URL of the mercure hub that can be used to get real-time updates published by Shlink"
                                        },
                                        "jwt": {
                                            "type": "string",
                                            "description": "A JWT with subscribe permissions which is valid with the mercure hub"
                                        },
                                        "jwtExpiration": {
                                            "type": "string",
                                            "description": "The date (in ISO-8601 format) in which the JWT will expire"
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "mercureHubUrl": "https:\/\/example.com\/.well-known\/mercure",
                                "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJTaGxpbmsiLCJpYXQiOjE1ODY2ODY3MzIsImV4cCI6MTU4Njk0NTkzMiwibWVyY3VyZSI6eyJzdWJzY3JpYmUiOltdfX0.P-519lgU7dFz0bbNlRG1CXyqugGbaHon4kw6fu4QBdQ",
                                "jwtExpiration": "2020-04-15T12:18:52+02:00"
                            }
                        }
                    },
                    "501": {
                        "description": "This Shlink instance is not integrated with a mercure hub",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "title": "Mercure integration not configured",
                                "type": "MERCURE_NOT_CONFIGURED",
                                "detail": "This Shlink instance is not integrated with a mercure hub.",
                                "status": 501
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/problem+json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "\/rest\/health": {
            "get": {
                "tags": [
                    "Monitoring"
                ],
                "summary": "Check healthiness",
                "description": "Checks the healthiness of the service, making sure it can access required resources.",
                "operationId": "health",
                "responses": {
                    "200": {
                        "description": "The passing health status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "pass",
                                                "fail"
                                            ],
                                            "type": "string",
                                            "description": "The status of the service"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Shlink version"
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "about": {
                                                    "type": "string",
                                                    "description": "About shlink"
                                                },
                                                "project": {
                                                    "type": "string",
                                                    "description": "Shlink project repository"
                                                }
                                            },
                                            "description": "A list of links"
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "status": "pass",
                                "version": "1.16.0",
                                "links": {
                                    "about": "https:\/\/shlink.io",
                                    "project": "https:\/\/github.com\/shlinkio\/shlink"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The failing health status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "pass",
                                                "fail"
                                            ],
                                            "type": "string",
                                            "description": "The status of the service"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Shlink version"
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "about": {
                                                    "type": "string",
                                                    "description": "About shlink"
                                                },
                                                "project": {
                                                    "type": "string",
                                                    "description": "Shlink project repository"
                                                }
                                            },
                                            "description": "A list of links"
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application\/json": {
                                "status": "fail",
                                "version": "1.16.0",
                                "links": {
                                    "about": "https:\/\/shlink.io",
                                    "project": "https:\/\/github.com\/shlinkio\/shlink"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "required": [
                                        "type",
                                        "title",
                                        "detail",
                                        "status"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A machine unique code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "A unique title"
                                        },
                                        "detail": {
                                            "type": "string",
                                            "description": "A human-friendly error description"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "HTTP response status code"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{shortCode}": {
            "get": {
                "tags": [
                    "URL Shortener"
                ],
                "summary": "Short URL",
                "description": "Represents a short URL. Tracks the visit and redirects tio the corresponding long URL",
                "operationId": "shortUrl",
                "parameters": [
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to resolve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Visit properly tracked and redirected"
                    }
                }
            }
        },
        "\/{shortCode}\/track": {
            "get": {
                "tags": [
                    "URL Shortener"
                ],
                "summary": "Short URL tracking pixel",
                "description": "Generates a 1px transparent image which can be used to track emails with a short URL",
                "operationId": "trackShortUrl",
                "parameters": [
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to resolve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image in GIF format",
                        "content": {
                            "image\/gif": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{shortCode}\/qr-code": {
            "get": {
                "tags": [
                    "URL Shortener"
                ],
                "summary": "Short URL QR code",
                "description": "Generates a QR code image pointing to a short URL.<br \/>Since this is not an API endpoint but an image one, when an invalid value is provided for any of the query params, they will fall to their default values instead of throwing an error.",
                "operationId": "shortUrlQrCode",
                "parameters": [
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to resolve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the image to be returned.",
                        "required": false,
                        "schema": {
                            "maximum": 1000,
                            "minimum": 50,
                            "type": "integer",
                            "default": 300
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format for the QR code image, being valid values png and svg. Not providing the param or providing any other value will fall back to png.",
                        "required": false,
                        "schema": {
                            "enum": [
                                "png",
                                "svg"
                            ],
                            "type": "string",
                            "default": "png"
                        }
                    },
                    {
                        "name": "margin",
                        "in": "query",
                        "description": "The margin around the QR code image.",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "errorCorrection",
                        "in": "query",
                        "description": "The error correction level to apply to the the QR code: **[L]**ow, **[M]**edium, **[Q]**uartile or **[H]**igh. See [docs](https:\/\/www.qrcode.com\/en\/about\/error_correction.html).",
                        "required": false,
                        "schema": {
                            "enum": [
                                "L",
                                "M",
                                "Q",
                                "H"
                            ],
                            "type": "string",
                            "default": "L"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code in PNG format",
                        "content": {
                            "image\/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image\/svg+xml": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/{shortCode}\/qr-code\/{size}": {
            "get": {
                "tags": [
                    "URL Shortener"
                ],
                "summary": "Short URL QR code",
                "description": "Generates a QR code image pointing to a short URL",
                "operationId": "shortUrlQrCodeSize",
                "parameters": [
                    {
                        "name": "shortCode",
                        "in": "path",
                        "description": "The short code to resolve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "path",
                        "description": "The size of the image to be returned.",
                        "required": false,
                        "schema": {
                            "maximum": 1000,
                            "minimum": 50,
                            "type": "integer",
                            "default": 300
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format for the QR code image, being valid values png and svg. Not providing the param or providing any other value will fall back to png.",
                        "required": false,
                        "schema": {
                            "enum": [
                                "png",
                                "svg"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code in PNG format",
                        "content": {
                            "image\/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image\/svg+xml": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "description": "A valid shlink API key",
                "name": "X-Api-Key",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Short URLs",
            "description": "Operations that can be performed on short URLs"
        },
        {
            "name": "Tags",
            "description": "Let you handle the list of available tags"
        },
        {
            "name": "Visits",
            "description": "Operations to manage visits on short URLs"
        },
        {
            "name": "Domains",
            "description": "Operations to manage domains used on short URLs"
        },
        {
            "name": "Integrations",
            "description": "Handle services with which shlink is integrated"
        },
        {
            "name": "Monitoring",
            "description": "Public endpoints designed to monitor the service"
        },
        {
            "name": "URL Shortener",
            "description": "Non-rest endpoints, used to be publicly exposed"
        }
    ],
    "externalDocs": {
        "description": "Find more info on how to start using this API here",
        "url": "https:\/\/shlink.io\/documentation\/api-docs"
    }
}